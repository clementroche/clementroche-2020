@import 'utils';

@include font-faces();

:root {
  --font-grotesk: '#{nth($font-faces, 1)}', serif;
  @include colors-properties();
  @include responsive-properties();
}

html {
  box-sizing: border-box;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  width: 100%;
  word-spacing: 1px;
}

body {
  position: relative;
}

html,
body {
  height: 100%;
  overflow: hidden;
  width: 100%;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  // user-drag: none;
  user-select: none;
}

input,
textarea,
button,
select,
a {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

a,
a:hover,
a:active,
a:focus {
  outline: 0 !important;
}

input::-moz-focus-inner {
  border: 0;
}

button {
  background: rgba(0, 0, 0, 0);
  border: unset;
  font-size: inherit;
  padding: 0;

  &:active {
    border-style: unset;
  }
}

@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

.u-link-hover {
  position: relative;

  @include hover {
    &::after {
      transform: scaleX(1);
      transform-origin: center left;
    }
  }

  &::after {
    background-color: currentColor;
    bottom: -2px;
    content: '';
    display: block;
    height: 1px;
    left: 0;
    position: absolute;
    transform: scaleX(0);
    transform-origin: center right;
    transition: transform 600ms _ease('quint', 'in-out');
    width: 100%;
  }
}

.transition {
  &__fadeIn {
    opacity: 0;
    transition-duration: 1s;
    transition-property: opacity;
    transition-timing-function: _ease('quint', 'out');
  }

  &__fadeInUp {
    opacity: 0;
    transform: translate(0, 100px);
    transition-delay: calc((var(--index, 0) * 100ms));
    transition-duration: 1s;
    transition-property: opacity, transform !important;
    transition-timing-function: _ease('quint', 'in'), _ease('quint', 'out');
  }

  &--on {
    &.transition {
      &__fadeIn {
        opacity: 1;
      }

      &__fadeInUp {
        opacity: 1;
        transform: translate(0, 0);
      }
    }
  }
}

:root {
  --layout-max-width: 1800px;
  --layout-gap: 20px;
  --layout-columns: 4;

  @include media('>m') {
    --layout-gap: 30px;
    --layout-columns: 16;
  }
}

.e-layoutGrid {
  column-gap: var(--layout-gap);
  display: grid;
  grid-template-columns: repeat(var(--layout-columns), 1fr);
  margin: 0 auto;
  max-width: var(--layout-max-width);
  padding-left: var(--layout-gap);
  padding-right: var(--layout-gap);
}
